option('tests', type: 'feature', description: 'Build tests', value: 'enabled')
option('verbosity',type:'integer',min:0, max:1, description: 'Enables/Disables pldm verbosity',value: 0)
option('fw-debug',type:'feature' ,description: 'Enables or disable pldm firmware update debug log. Default is disabled.', value: 'disabled')
option('oe-sdk', type: 'feature', description: 'Enable OE SDK')
option('oem-ibm', type: 'feature', description: 'Enable IBM OEM PLDM')
option('requester-api', type: 'feature', description: 'Enable libpldm requester API', value: 'enabled')
option('utilities', type: 'feature', description: 'Enable debug utilities', value: 'enabled')
option('libpldmresponder', type: 'feature', description: 'Enable libpldmresponder', value: 'enabled')

option('libpldm-only', type: 'feature', description: 'Only build libpldm', value: 'disabled')
option('oem-ibm-dma-maxsize', type: 'integer', min:4096, max: 16773120, description: 'OEM-IBM: max DMA size', value: 8384512) #16MB - 4K
option('softoff', type: 'feature', description: 'Build soft power off application', value: 'disabled')
option('softoff-timeout-seconds', type: 'integer', description: 'softoff: Time to wait for host to gracefully shutdown', value: 7200)

option('systemd', type: 'feature', description: 'Include systemd support', value: 'enabled')

# Timing specifications for PLDM messages
option('number-of-request-retries', type: 'integer', min: 2, max: 30, description: 'The number of times a requester is obligated to retry a request', value: 2)
option('number-of-command-attempts', type: 'integer', min: 1, max: 30, description: 'The number of command attempts beyond the PLDM Base specification requirements for a PLDM Request', value: 3)
option('instance-id-expiration-interval', type: 'integer', min: 5, max: 20, description: 'Instance ID expiration interval in seconds', value: 5)
# Default response-time-out set to 2 seconds to facilitate a minimum retry of the request of 2.
option('response-time-out', type: 'integer', min: 300, max: 4800, description: 'The amount of time a requester has to wait for a response message in milliseconds', value: 2000)

option('heartbeat-timeout-seconds', type: 'integer', description: ' The amount of time host waits for BMC to respond to pings from host, as part of host-bmc surveillance', value: 120)

# PLDM Terminus options
option('terminus-id', type:'integer', min:0, max: 255, description: 'The terminus id value of the device that is running this pldm stack', value:1)
option('terminus-handle',type:'integer',min:0, max:65535, description: 'The terminus handle value of the device that is running this pldm stack', value:1)

# Firmware update configuration parameters
option('maximum-transfer-size', type: 'integer', min: 16, max: 4294967295, description: 'Maximum size in bytes of the variable payload allowed to be requested by the FD, via RequestFirmwareData command', value: 4096)

# Firmware update configuration parameters
option('update-mode-idle-timeout', type: 'integer', min: 60, max: 120, description: 'FD_T1 - Update mode idle timeout in seconds', value: 60)

# Flight Recorder for PLDM Daemon
option('flightrecorder-max-entries', type:'integer',min:0, max:30, description: 'The max number of pldm messages that can be stored in the recorder, this feature will be disabled if it is set to 0', value: 10)

# Platform-mc configuration parameters
option('sensor-polling-time', type: 'integer', min: 1, max: 4294967295, description: 'The interval time of sensor polling in milliseconds', value: 249)
option('local-eid-over-i2c', type: 'integer', min: 1, max: 255, description: 'The local MCTP EID over I2C', value: 8)
option('local-eid-over-pcie', type: 'integer', min: 1, max: 255, description: 'The local MCTP EID over PCIe', value: 10)
option('stale-sensor-upper-limitms-polling-time', type: 'integer', min: 1, max: 4294967295, description: 'The interval time of sensor polling in milliseconds', value: 750)
option('platform-prefix', type: 'string', description: 'Platform prefix, it prepend to DBus object name, such as ${PLATFORM_PREFIX}_CPU_0', value: 'HGX')
option('nvlink-c2c-fabric-object', type: 'feature', description: 'expose enpoint PDI for nvlink c2c faric', value: 'enabled')

option('non-pldm', type: 'feature', description: 'Support for non pldm devices', value: 'enabled')
option('oem-nvidia', type: 'feature', description: 'Enable NVIDIA OEM PLDM')
option('debug-token', type: 'feature', description: 'Enable Debug Token')
option('fw-update-skip-package-size-check', type: 'feature', description: 'Skip PLDM package size check')
option('pldm-package-verification-must-be-signed', type: 'feature', description: 'Allow to update only signed PLDM package', value: 'disabled')
option('pldm-package-verification', type: 'combo', choices : ['disabled', 'authentication', 'integrity'], description: 'Enable PLDM package signature verification. There are two possible types of verification: authentication and integrity. Authentication verification uses a public key delivered via a receipt, while integrity verification uses a public key included in the package.', value : 'disabled')
option('pldm-type2', type: 'feature', description: 'Support for PLDM Type-2', value: 'disabled')
option('firmware-update-time', type: 'integer', min: 5, max: 30, description: 'Time in minutes for firmware update to complete. Note: This value should be greater than webserver task timeout.', value: 20)
option('progress-percent-updater-interval', type: 'integer', min: 1, max: 4, description: 'Time in minutes to update progress percent', value: 4)
option('firmware-package-staging-dir', type: 'string', description: 'Firmware package staging directory for PLDM packages. This path will be used by bmcweb to copy the firmware update package.', value: '/tmp/images')
option('firmware-package-split-staging-dir', type: 'string', description: 'Firmware package split staging and update directory for PLDM packages. This path will be used by bmcweb to copy the firmware update package.', value: '')
option('firmware-package-staging-dir-mount-service', type: 'string', description: 'Firmware package staging directory mount service. Before creating file event watch on the directory, pldm will check for this service status and if service is not completed it will wait for systemd signal. Keep this field empty if mount happens in init or its just a directory.', value: '')
option('firmware-package-split-staging-dir-mount-service', type: 'string', description: 'Firmware package split staging directory mount service. Before creating file event watch on the directory, pldm will check for this service status and if service is not completed it will wait for systemd signal. Keep this field empty if mount is taken care in init or its just a directory.', value: '')


# Public key to verify signed PLDM package. The default value is public key which is used in the unit tests. Please do not modify.
option('pldm-package-verification-key', type: 'string', description: 'Public key to verify signed PLDM package', value: '2d2d2d2d2d424547494e205055424c4943204b45592d2d2d2d2d0a4d485977454159484b6f5a497a6a3043415159464b34454541434944596741457770724a78393133306b4f46766f764c546b36436e394551696d632b383066610a47693435747569386856385568786a4c755a54315263484a4e485752785363566e6c6358435369516f6e6c5476666f4a3971444d7679614d415570354c694f4f0a4154774c57564a646654536143635450554e567147735276676841774342654e0a2d2d2d2d2d454e44205055424c4943204b45592d2d2d2d2d0a')
